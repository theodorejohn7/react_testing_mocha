{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Theo/REACT JS/react_testing/src/components/api_call/ReactApi.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReactApi() {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery('repoData', () => axios.get('https://api.github.com/repos/tannerlinsley/react-query').then(res => res === null || res === void 0 ? void 0 : res.data));\n  if (isLoading) return 'Loading...';\n  if (error) return 'An error has occurred: ' + error.message;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"ReactApi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReactApi, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n  return [useQuery];\n});\n\n_c = ReactApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactApi\");","map":{"version":3,"sources":["/home/dell/Desktop/Theo/REACT JS/react_testing/src/components/api_call/ReactApi.js"],"names":["React","axios","useQuery","ReactApi","isLoading","error","data","get","then","res","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BJ,QAAQ,CAAC,UAAD,EAAa,MACxDD,KAAK,CACFM,GADH,CACO,wDADP,EAEGC,IAFH,CAEQC,GAAG,IAAIA,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEH,IAFpB,CAD2C,CAA3C;AAKF,MAAIF,SAAJ,EAAe,OAAO,YAAP;AACf,MAAIC,KAAJ,EAAW,OAAO,4BAA4BA,KAAK,CAACK,OAAzC;AAGX,sBAEE;AAAA,2BAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UAFF;AASD;;GApBuBP,Q;UAEeD,Q;;;KAFfC,Q","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { useQuery } from 'react-query'\n\nexport default function ReactApi() {\n\n    const { isLoading, error, data } = useQuery('repoData', () =>\n    axios\n      .get('https://api.github.com/repos/tannerlinsley/react-query')\n      .then(res => res?.data),\n  )\n  if (isLoading) return 'Loading...'\n  if (error) return 'An error has occurred: ' + error.message\n \n\n  return (\n\n    <div>\n      {/* <h1>{data.name}</h1> */}\n\n      <div>ReactApi</div>\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}